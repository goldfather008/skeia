<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.1.xsd">
	<!-- <mvc:annotation-driven /> 是一种简写形式，完全可以手动配置替代这种简写形式，简写形式可以让初学都快速应用默认配置方案。 
		<mvc:annotation-driven /> 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 
		两个bean,是spring MVC为@Controllers分发请求所必须的。 并提供了：数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson）。 
		后面，我们处理响应ajax请求时，就使用到了对json的支持。 后面，对action写JUnit单元测试时，要从spring IOC容器中取DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 
		两个bean， 来完成测试，取的时候要知道是<mvc:annotation-driven />这一句注册的这两个bean。 当我们需要controller返回一个map的json对象时，可以设定<mvc:annotation-driven 
		/>， 同时设定<mvc:message-converters> 标签，设定字符集和json处理类 http://kingliu.iteye.com/blog/1972973 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="false">
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 扫描com.huyonghua.skeia及其子包下面自动扫描通过注解配置的组件，将自动发现带有@Controller注解的类， 并注册成Bean 
		由于Spring MVC注脚方式service和controller的扫描顺序问题，而在springMVC配置文件中将Service注解给去掉 
		注：http://www.myexception.cn/vc-mfc/418069.html -->
	<context:component-scan base-package="com.huyonghua.skeia.controller"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>		

    <!-- 对静态资源文件的访问 -->
    <mvc:resources mapping="/static/**" location="/static/"/>

    <!-- 配置视图解释器 jsp -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
	<!-- 全局异常配置 start -->
	<!-- mvc:view-controller标签的作用直接将访问url和视图进行映射，而无需要通过控制器。 -->
	<mvc:view-controller path="/403" view-name="/403" />
	<mvc:view-controller path="/500" view-name="/500" />
	<!-- 全局异常配置 end -->
	
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行，一定要放在spring-mvc的配置文件中，否则放在Controller层的shiro注解（如@RequiresPermissions等）就不起作用 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- BEGIN SHIRO对Controller方法级安全控制的AOP支持 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>    

</beans>